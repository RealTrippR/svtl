cmake_minimum_required(VERSION 3.12)
project(
    SVTL
    VERSION 1.0
    LANGUAGES C
)
set(CMAKE_C_STANDARD 90)

add_library(SVTL_STATIC STATIC
    src/svtl.c
    src/cthreads.c
)
add_library(SVTL_SHARED SHARED
    src/svtl.c
    src/cthreads.c
)
target_include_directories(SVTL_STATIC PUBLIC
    ${PROJECT_SOURCE_DIR}
)
target_include_directories(SVTL_SHARED PUBLIC
    ${PROJECT_SOURCE_DIR}
)

# add shared macro
target_compile_definitions(SVTL_SHARED PRIVATE
    SVTL_DYNAMIC
)
target_compile_definitions(SVTL_SHARED PRIVATE SVTL_SHARED_EXPORTS)

set_target_properties(SVTL_STATIC PROPERTIES OUTPUT_NAME "SVTL")
set_target_properties(SVTL_SHARED PROPERTIES OUTPUT_NAME "SVTL")



add_library(common INTERFACE)

# Set warnings to treat as errors
if (MSVC) 
    target_compile_options(common INTERFACE
        /W4               
        /we4047           # 'different levels of indirection'
        /we4715           # 'not all control paths return a value'
        /we4716           # 'must return a value'
        /we4098           # 'void value not ignored as it ought to be'
        /we4777           # 'format string mismatch'
        /we4090           # 'different qualifiers'
    )

else()
    target_compile_options(common INTERFACE
        -Wall
        -Werror=return-type
        -Werror=incompatible-pointer-types
        -Werror=format
        -Werror=format-security
        -Werror=discarded-qualifiers
    )
endif()


if (MSVC)
    target_compile_options(common INTERFACE
        /std:c11
    )
    target_compile_options(common INTERFACE
        $<$<NOT:$<CONFIG:Debug>>:/O2>
        $<$<NOT:$<CONFIG:Debug>>:/DNDEBUG>
    )
else()
    target_compile_options(common INTERFACE
        $<$<NOT:$<CONFIG:Debug>>:-DNDEBUG>
    )
    # Set compiler flags
    target_compile_options(common INTERFACE
        -std=c89
        -O3
        -DNDEBUG
        -msse4.2
        -march=native
        -funroll-loops
        -fpeel-loops
        -fpredictive-commoning
        -frename-registers
        -ffast-math
        -flto
        -Wall
    )
endif()


set_target_properties(SVTL_SHARED PROPERTIES
    LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
)


set_target_properties(SVTL_STATIC PROPERTIES
    ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
)

target_link_libraries(SVTL_SHARED PRIVATE common)
target_link_libraries(SVTL_STATIC PRIVATE common)